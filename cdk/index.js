"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const s3_static_site_with_cloudfront_1 = require("./stacks/s3-static-site-with-cloudfront");
const statemachine_1 = require("./stacks/statemachine");
const oidcrole_1 = require("./stacks/oidcrole");
const app = new aws_cdk_lib_1.App();
new s3_static_site_with_cloudfront_1.StaticSite(app, "site", {
    env: {
        account: app.node.tryGetContext("account"),
        region: app.node.tryGetContext("region"),
    },
    domainName: "2024.lincolnhack.org",
    hostedZoneId: "Z084830024CM67I9CAD70",
});
new s3_static_site_with_cloudfront_1.StaticSite(app, "demosite", {
    env: {
        account: app.node.tryGetContext("account"),
        region: app.node.tryGetContext("region"),
    },
    domainName: "demo.2024.lincolnhack.org",
    hostedZoneId: "Z084830024CM67I9CAD70",
});
new statemachine_1.StateMachineStack(app, "StateMachine", {
    env: {
        account: app.node.tryGetContext("account"),
        region: app.node.tryGetContext("region"),
    },
    domainName: "2024.lincolnhack.org",
    hostedZoneId: "Z084830024CM67I9CAD70",
});
new oidcrole_1.default(app, "OidcConnection", {
    env: {
        account: app.node.tryGetContext("account"),
        region: app.node.tryGetContext("region"),
    },
    oidcProviderUrl: "https://token.actions.githubusercontent.com",
    clientIds: ["sts.amazonaws.com"],
    thumbprints: ["a031c46782e6e6c662c2c87c76da9aa62ccabd8e"],
    repositoryConfig: [
        { owner: "sdh100shaun", repo: "lincolnhack2024", filter: "main" },
    ],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUFrQztBQUNsQyw0RkFBcUU7QUFDckUsd0RBQTBEO0FBQzFELGdEQUErQztBQUUvQyxNQUFNLEdBQUcsR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztBQUd0QixJQUFJLDJDQUFVLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRTtJQUMxQixHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQzFDLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUM7S0FDekM7SUFDRCxVQUFVLEVBQUUsc0JBQXNCO0lBQ2xDLFlBQVksRUFBRSx1QkFBdUI7Q0FDdEMsQ0FBQyxDQUFDO0FBRUgsSUFBSSwyQ0FBVSxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUU7SUFDOUIsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQztRQUMxQyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO0tBQ3pDO0lBQ0QsVUFBVSxFQUFFLDJCQUEyQjtJQUN2QyxZQUFZLEVBQUUsdUJBQXVCO0NBQ3RDLENBQUMsQ0FBQztBQUVILElBQUksZ0NBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRTtJQUN2QyxHQUFHLEVBQUU7UUFDRCxPQUFPLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQzFDLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUM7S0FDM0M7SUFDRCxVQUFVLEVBQUUsc0JBQXNCO0lBQ2xDLFlBQVksRUFBRSx1QkFBdUI7Q0FDeEMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxrQkFBYyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRTtJQUN0QyxHQUFHLEVBQUU7UUFDRCxPQUFPLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQzFDLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUM7S0FDM0M7SUFDRCxlQUFlLEVBQUUsNkNBQTZDO0lBQzlELFNBQVMsRUFBRSxDQUFDLG1CQUFtQixDQUFDO0lBQ2hDLFdBQVcsRUFBRSxDQUFDLDBDQUEwQyxDQUFDO0lBQ3pELGdCQUFnQixFQUFFO1FBQ1osRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFO0tBQ2xFO0NBQ0YsQ0FBQyxDQUFDO0FBRVQsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwIH0gZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgU3RhdGljU2l0ZSB9IGZyb20gXCIuL3N0YWNrcy9zMy1zdGF0aWMtc2l0ZS13aXRoLWNsb3VkZnJvbnRcIjtcbmltcG9ydCB7IFN0YXRlTWFjaGluZVN0YWNrIH0gZnJvbSAnLi9zdGFja3Mvc3RhdGVtYWNoaW5lJztcbmltcG9ydCBPaWRjQ29ubmVjdGlvbiBmcm9tICcuL3N0YWNrcy9vaWRjcm9sZSc7XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKTtcblxuXG5uZXcgU3RhdGljU2l0ZShhcHAsIFwic2l0ZVwiLCB7XG4gIGVudjoge1xuICAgIGFjY291bnQ6IGFwcC5ub2RlLnRyeUdldENvbnRleHQoXCJhY2NvdW50XCIpLFxuICAgIHJlZ2lvbjogYXBwLm5vZGUudHJ5R2V0Q29udGV4dChcInJlZ2lvblwiKSxcbiAgfSxcbiAgZG9tYWluTmFtZTogXCIyMDI0LmxpbmNvbG5oYWNrLm9yZ1wiLFxuICBob3N0ZWRab25lSWQ6IFwiWjA4NDgzMDAyNENNNjdJOUNBRDcwXCIsXG59KTtcblxubmV3IFN0YXRpY1NpdGUoYXBwLCBcImRlbW9zaXRlXCIsIHtcbiAgZW52OiB7XG4gICAgYWNjb3VudDogYXBwLm5vZGUudHJ5R2V0Q29udGV4dChcImFjY291bnRcIiksXG4gICAgcmVnaW9uOiBhcHAubm9kZS50cnlHZXRDb250ZXh0KFwicmVnaW9uXCIpLFxuICB9LFxuICBkb21haW5OYW1lOiBcImRlbW8uMjAyNC5saW5jb2xuaGFjay5vcmdcIixcbiAgaG9zdGVkWm9uZUlkOiBcIlowODQ4MzAwMjRDTTY3STlDQUQ3MFwiLFxufSk7XG5cbm5ldyBTdGF0ZU1hY2hpbmVTdGFjayhhcHAsIFwiU3RhdGVNYWNoaW5lXCIsIHtcbiAgICBlbnY6IHtcbiAgICAgICAgYWNjb3VudDogYXBwLm5vZGUudHJ5R2V0Q29udGV4dChcImFjY291bnRcIiksXG4gICAgICAgIHJlZ2lvbjogYXBwLm5vZGUudHJ5R2V0Q29udGV4dChcInJlZ2lvblwiKSxcbiAgICB9LFxuICAgIGRvbWFpbk5hbWU6IFwiMjAyNC5saW5jb2xuaGFjay5vcmdcIixcbiAgICBob3N0ZWRab25lSWQ6IFwiWjA4NDgzMDAyNENNNjdJOUNBRDcwXCIsXG59KTtcblxubmV3IE9pZGNDb25uZWN0aW9uKGFwcCwgXCJPaWRjQ29ubmVjdGlvblwiLCB7XG4gICAgZW52OiB7XG4gICAgICAgIGFjY291bnQ6IGFwcC5ub2RlLnRyeUdldENvbnRleHQoXCJhY2NvdW50XCIpLFxuICAgICAgICByZWdpb246IGFwcC5ub2RlLnRyeUdldENvbnRleHQoXCJyZWdpb25cIiksXG4gICAgfSxcbiAgICBvaWRjUHJvdmlkZXJVcmw6IFwiaHR0cHM6Ly90b2tlbi5hY3Rpb25zLmdpdGh1YnVzZXJjb250ZW50LmNvbVwiLFxuICAgIGNsaWVudElkczogW1wic3RzLmFtYXpvbmF3cy5jb21cIl0sXG4gICAgdGh1bWJwcmludHM6IFtcImEwMzFjNDY3ODJlNmU2YzY2MmMyYzg3Yzc2ZGE5YWE2MmNjYWJkOGVcIl0sXG4gICAgcmVwb3NpdG9yeUNvbmZpZzogW1xuICAgICAgICAgIHsgb3duZXI6IFwic2RoMTAwc2hhdW5cIiwgcmVwbzogXCJsaW5jb2xuaGFjazIwMjRcIiwgZmlsdGVyOiBcIm1haW5cIiB9LFxuICAgICAgICBdLFxuICAgICAgfSk7XG5cbmFwcC5zeW50aCgpOyJdfQ==